extends layout

block afterhead
  link(rel='stylesheet', type='text/css', href='//cdnjs.cloudflare.com/ajax/libs/chartist/0.8.0/chartist.min.css')

block menuleft
  button.pure-button
    img(src='static/img/button-logout.svg', width='60', height='60')

block menuright
  button.pure-button.modal-toggle
    img(src='static/img/button-add.svg', width='60', height='60')

block app
    
  section#chart
    .container
      .ct-summary
        p: strong Expense Summary
      .ct-chart.ct-area
      .spacer-20
      .ct-legends.text-center
        .ct-legend.ct-legend-0
        span Total expense
        .ct-legend.ct-legend-1
        span Billed

  section#table
    .container
      .spacer-40
      
      //-.table-filters.text-right
        p
          span View
          a#view-all.table-filter(title='View all')
            img(src='static/img/button-viewall.svg', width='31', height='31')
          a#view-selectedonly.table-filter.table-filter-selected(title='View only selected customers')
            img(src='static/img/button-viewonly.svg', width='31', height='31')
      
      table.pure-table
        thead
          tr
            th(style='width: 80px;') Date
            th Title
            th(style='width: 250px;') Customer
            th(style='width: 120px;') Expense
            th(style='width: 60px;') Billed
        tbody
          tr
            td.date 17 Jun 
            td New PC
            td
              span.client(data-cli='Plastic Panda') Plastic Panda
            td € 540,00
            td
              .switch(data-id='1')
                .switch-container
                  span
          tr
            td.date 15 Jun 
            td Amazon AWS
            td
              span.client(data-cli='GSO') GSO
              span.client(data-cli='UTilia') UTilia
              span.client(data-cli='Butterfly') Butterfly
            td € 134,00
            td
              .switch(data-id='2')
                .switch-container
                  span
          tr
            td.date 15 May 
            td PC for Tools
            td
              span.client(data-cli='UTilia') UTilia
            td € 551,00
            td
              .switch.billed(data-id='3')
                .switch-container
                  span
            
      
      .spacer-40
      
  section#modal
    .modal
      header.modal-header
      
        .pull-left
          h1 Add expense
          
        .pull-right
          button.pure-button.modal-toggle
            img(src='static/img/button-close.svg', width='60', height='60')
            
      .modal-body
        form.pure-form()
          .padding
            input#datepicker-input(type='hidden', name='date')
            #datepicker
                    
          .padding
            input(type='text', name='customers', placeholder='Customers')
            .spacer-20
            input(type='text', name='title', placeholder='Title')
            .spacer-20
            input(type='text', name='expense', placeholder='Expense')
            .spacer-20
            button.primary(type='submit')
              span Add to list

block scripts
  script(src='//cdnjs.cloudflare.com/ajax/libs/chartist/0.8.0/chartist.min.js')
  script.
    (function () {
    
      document.querySelectorAll('#table .switch').on('click', function () {
        this.classList.toggle('billed');
        
        console.log('AJAX request to set new BilledStatus for #' + this.getAttribute('data-id'), this.classList.contains('billed'));
        console.log('Need also to refresh Chart data');
        
      });
      
      var modalToggle = document.querySelectorAll('.modal-toggle');
      
      if (modalToggle) {
        modalToggle.on('click', function () {
        
          var dataModal = this.getAttribute('data-modal');
          var modal = document.getElementById('modal');
          
          if (dataModal === 'open' || !modal.classList.contains('visible')) {
            modal.classList.add('visible');
            setTimeout(function () {
              modal.classList.add('fadein');
            }, 5);
          } else if (dataModal === 'close' || modal.classList.contains('visible')) {
            modal.classList.remove('fadein');
            setTimeout(function () {
              modal.classList.remove('visible');
            }, 500);
          }
          
        });
      }
      
      
      var clients = document.querySelectorAll('#table .client');
      if (clients) {
      
        clients.on('click', function (e) {
          var ctrlKey = e.ctrlKey || e.shiftKey;
          var me = this.getAttribute('data-cli');
          var wasSelected = this.classList.contains('selected');  
          
          if (!ctrlKey) {
            document.querySelectorAll('#table .client.selected').forEach(function (c) {
              c.classList.remove('selected');
            });
          }
          
          if (!wasSelected) {
            document.querySelectorAll('#table .client[data-cli="' + me + '"]').forEach(function (c) {
              c.classList.add('selected');
            });
          } else if (ctrlKey) {
            document.querySelectorAll('#table .client[data-cli="' + me + '"]').forEach(function (c) {
              c.classList.remove('selected');
            });
          }
          
          filterTable();
          
        });
      
      }
      
      
      var filterTable = function () {
      
        if (document.querySelectorAll('#table tbody tr .selected').length > 0) {
          document.querySelectorAll('#table tbody tr').forEach(function (tr) {

            if (tr.querySelectorAll('.client.selected').length === 0) {
              tr.classList.add('fadeout');
            } else {
              tr.classList.remove('fadeout');
            }

          });
        } else {
          document.querySelectorAll('#table tbody tr').forEach(function (tr) {
            tr.classList.remove('fadeout');
          });
        }
      
      };
      
      
      new Chartist.Line('.ct-chart.ct-area', {
        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],
        series: [
          ['470', '870', '52', '500', '212', '334'],
          ['470', '690', '52', '500', '50', '0']
        ]
      }, {
        low: 0,
        showArea: true,
        showLine: false,
        showPoint: false,
        fullWidth: true,
        lineSmooth: Chartist.Interpolation.simple({
          divisor: 20
        }),
        axisX: {
          showGrid: false
        },
        axisY: {
          showLabel: false,
          offset: 0,
          labelInterpolationFnc: function (value) {
            return '€ ' + value;
          }
        }
      });
      
      
      
      var dateInput = document.getElementById('datepicker-input');
      var datePicker = new Pikaday({
        field: document.getElementById('datepicker'),
        container: document.getElementById('datepicker'),
        //format: 'dddd, DD MMMM YYYY',
        onSelect: function(date) {
            dateInput.value = datePicker.toString();
        },
      });
      datePicker.hide = function() {/*noop*/}
      datePicker.show();
      
      
    })();